generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  username String @unique
  password String
  active Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  communities Community[] @relation("CommunityOwner")
  posts Post[] @relation("PostCreator")

  @@map("users")
}

model Community {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String @unique
  description String
  ownerId String @db.ObjectId
  owner User @relation(fields: [ownerId], references: [id], name: "CommunityOwner")
  active Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts Post[] @relation("PostOwner")

  @@map("communities")
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  communityId String @db.ObjectId
  community Community @relation(fields: [communityId], references: [id], name: "PostOwner")
  creatorId String @db.ObjectId
  creator User @relation(fields: [creatorId], references: [id], name: "PostCreator")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content Content[] @relation("ContentOwner")
  
  @@map("posts")
}

enum ContentType {
  Text
  Video
}

model Content {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  type ContentType
  content String
  postId String @db.ObjectId
  post Post @relation(fields: [postId], references: [id], name: "ContentOwner")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contents")
}

model Comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String
  postId String
  parentId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("comments")
}
